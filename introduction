ARCHITECTURE OF K8S:
C --> clustor (master and worknode)
N --> node
p --> pod
C --> container
A --> application

MASTER NODE COMPONANTS:                                                                          
             1. API server ( API server will take commands from user and exicute and give o/p to user, 
                             and it used to communicate in cluster)     
             2. etcd (it is like a data base to k8s)                                                                                           
             3. controller manager
                         1. cloud controll manager (if we are implementing k8s on could than its called as cc manager)
                         2. kube controll manager ( if we are implementing on non cloud)
             4. scheduler ( it schedules work for worker node/pod based on hardware properties of server)
WORKER NODE COMPONANTS:
             1. kubelete (  it going to be as agent it will inform to master, it is used to monitor to pods(stopped, deleted, or stopped))
             2. kube proxy ( its like a network)
             3. pods( group of containers)
             4. container ( it is vm not having os in it)
             
 we cant setup k8s in many ways:
             self managed kubernatis clusters are,                                 cloud managed kubernatis cluster are
             1.minikube --> single node cluster                                    1. aws kubernatis clusters
             2.kubeadm --> multi node cluster (manual way of creating cluster)     2. azure kubernatis cluster
             3. kap --> multi node cluster (automation way of creating cluster)    3. google cloud cluster



POD: pod is a group of containers, it is a smallest unit of k8s which can deployable. inside we have containers, inside we have application.
the prod can be created on two ways:
1.Imperative     --> we create pods in this method by using commands 
2. Declarative   --> we create pods in this by using MANIFEST file, and the manifest file is in form of YAML file.

here now installing kubernatis by using script file , here we taking ubutu vm and it has many default directories we get while installing, so its
better to create a new directory and install all the set up for k8s in that directory.

mkdir project, in this we work with k8s now.
vim minikube.sh
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install curl wget apt-transport-https -y
          sudo curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube
          sudo chmod +x /usr/local/bin/minikube
          sudo minikube version
          sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          sudo echo "$(cat kubectl.sha256) kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          sudo minikube start --driver=docker --force
     



        
              
              

